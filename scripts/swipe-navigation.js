/**
 * Swipe Navigation Module
 * Handles left/right swipe gestures for internal screen navigation (SPA)
 */

export function initSwipeNavigation() {
  let touchStartX = 0;
  let touchStartY = 0;
  let touchEndX = 0;
  let touchEndY = 0;
  let isSwiping = false;
  let swipeTarget = null;
  
  const MIN_SWIPE_DISTANCE = 80; // –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –¥–ª—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —Å–≤–∞–π–ø–∞
  const MAX_VERTICAL_DRIFT = 50; // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
  const EDGE_THRESHOLD = 50; // –∑–æ–Ω–∞ —É –∫—Ä–∞—è —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–≤–∞–π–ø–∞
  
  // –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
  const screenTasks = document.getElementById('screenTasks');
  const screenFolders = document.getElementById('screenFolders');
  const backButton = document.getElementById('backToFolders');
  
  if (!screenTasks || !screenFolders) {
    console.warn('Swipe navigation: screens not found');
    return;
  }
  
  /**
   * –ü—Ä–∏–º–µ–Ω–∏—Ç—å transform –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ —Å–≤–∞–π–ø–∞
   */
  function applySwipeTransform(element, translateX, opacity = 1) {
    if (!element) return;
    element.style.transform = `translateX(${translateX}px)`;
    element.style.opacity = String(opacity);
    element.style.transition = 'none';
  }
  
  /**
   * –°–±—Ä–æ—Å–∏—Ç—å transform —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
   */
  function resetSwipeTransform(element, animate = true) {
    if (!element) return;
    if (animate) {
      element.style.transition = 'transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.3s ease';
    }
    element.style.transform = 'translateX(0)';
    element.style.opacity = '1';
    
    if (animate) {
      setTimeout(() => {
        element.style.transition = '';
      }, 300);
    }
  }
  
  /**
   * –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞–∑–∞–¥ –∫ –ø–∞–ø–∫–∞–º
   */
  function animateNavigateBack() {
    if (!screenTasks || !backButton) return;
    
    console.log('üîô Swipe: Navigating back to folders');
    
    // –ê–Ω–∏–º–∞—Ü–∏—è: —ç–∫—Ä–∞–Ω –∑–∞–¥–∞—á —É–µ–∑–∂–∞–µ—Ç –≤–ø—Ä–∞–≤–æ
    screenTasks.style.transition = 'transform 0.35s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.35s ease';
    screenTasks.style.transform = 'translateX(100%)';
    screenTasks.style.opacity = '0';
    
    // –ß–µ—Ä–µ–∑ 100ms –∫–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setTimeout(() => {
      backButton.click();
      // –°–±—Ä–æ—Å —Å—Ç–∏–ª–µ–π –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
      setTimeout(() => {
        screenTasks.style.transition = '';
        screenTasks.style.transform = '';
        screenTasks.style.opacity = '';
      }, 100);
    }, 100);
  }
  
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞: –º–æ–∂–Ω–æ –ª–∏ —Å–≤–∞–π–ø–Ω—É—Ç—å –Ω–∞–∑–∞–¥
   */
  function canSwipeBack() {
    // –°–≤–∞–π–ø –Ω–∞–∑–∞–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —ç–∫—Ä–∞–Ω –∑–∞–¥–∞—á –∞–∫—Ç–∏–≤–µ–Ω
    return screenTasks && !screenTasks.classList.contains('hidden') && screenTasks.classList.contains('is-active');
  }
  
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –∫–∞—Å–∞–Ω–∏—è
   */
  function handleTouchStart(e) {
    if (!canSwipeBack()) {
      return;
    }
    
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –µ—Å–ª–∏ —ç—Ç–æ input/textarea/button
    const target = e.target;
    if (target && (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.tagName === 'BUTTON')) {
      return;
    }
    
    const touch = e.touches[0];
    touchStartX = touch.clientX;
    touchStartY = touch.clientY;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–∞—Å–∞–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å —É –ª–µ–≤–æ–≥–æ –∫—Ä–∞—è (–¥–ª—è —Å–≤–∞–π–ø–∞ –≤–ø—Ä–∞–≤–æ)
    const isLeftEdge = touchStartX < EDGE_THRESHOLD;
    
    if (isLeftEdge) {
      isSwiping = true;
      swipeTarget = 'back';
    }
  }
  
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è
   */
  function handleTouchMove(e) {
    if (!isSwiping || !canSwipeBack()) return;
    
    const touch = e.touches[0];
    touchEndX = touch.clientX;
    touchEndY = touch.clientY;
    
    const deltaX = touchEndX - touchStartX;
    const deltaY = Math.abs(touchEndY - touchStartY);
    
    // –ï—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ - –æ—Ç–º–µ–Ω—è–µ–º —Å–≤–∞–π–ø
    if (deltaY > MAX_VERTICAL_DRIFT) {
      isSwiping = false;
      resetSwipeTransform(screenTasks, false);
      return;
    }
    
    // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ (‚Üí –Ω–∞–∑–∞–¥ –∫ –ø–∞–ø–∫–∞–º)
    if (swipeTarget === 'back' && deltaX > 0) {
      const progress = Math.max(0, Math.min(1, deltaX / window.innerWidth));
      const translateX = progress * window.innerWidth;
      const opacity = 1 - (progress * 0.3); // –õ—ë–≥–∫–æ–µ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ
      
      applySwipeTransform(screenTasks, translateX, opacity);
      
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –µ—Å–ª–∏ —Å–≤–∞–π–ø –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π
      if (Math.abs(deltaX) > 10 && Math.abs(deltaX) > deltaY) {
        e.preventDefault();
      }
    }
  }
  
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–∞—Å–∞–Ω–∏—è
   */
  function handleTouchEnd(e) {
    if (!isSwiping) return;
    
    const deltaX = touchEndX - touchStartX;
    const deltaY = Math.abs(touchEndY - touchStartY);
    const absDeltaX = Math.abs(deltaX);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–≤–∞–π–ø
    const isHorizontalSwipe = absDeltaX > deltaY;
    
    if (isHorizontalSwipe && absDeltaX > MIN_SWIPE_DISTANCE) {
      // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ (‚Üí –Ω–∞–∑–∞–¥ –∫ –ø–∞–ø–∫–∞–º)
      if (deltaX > 0 && swipeTarget === 'back' && canSwipeBack()) {
        animateNavigateBack();
      } else {
        resetSwipeTransform(screenTasks);
      }
    } else {
      // –°–≤–∞–π–ø –Ω–µ –∑–∞–≤–µ—Ä—à—ë–Ω - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ –º–µ—Å—Ç–æ
      resetSwipeTransform(screenTasks);
    }
    
    isSwiping = false;
    swipeTarget = null;
    touchStartX = 0;
    touchStartY = 0;
    touchEndX = 0;
    touchEndY = 0;
  }
  
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –∫–∞—Å–∞–Ω–∏—è
   */
  function handleTouchCancel() {
    if (isSwiping) {
      resetSwipeTransform(screenTasks);
      isSwiping = false;
      swipeTarget = null;
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π
  document.addEventListener('touchstart', handleTouchStart, { passive: true });
  document.addEventListener('touchmove', handleTouchMove, { passive: false });
  document.addEventListener('touchend', handleTouchEnd, { passive: true });
  document.addEventListener('touchcancel', handleTouchCancel, { passive: true });
  
  console.log('‚úÖ Swipe navigation initialized (SPA mode)');
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
  return function cleanup() {
    document.removeEventListener('touchstart', handleTouchStart);
    document.removeEventListener('touchmove', handleTouchMove);
    document.removeEventListener('touchend', handleTouchEnd);
    document.removeEventListener('touchcancel', handleTouchCancel);
  };
}
